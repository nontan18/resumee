image: docker:latest

services:
  - docker:dind

before_script:
  # k8s上で動くGitLab Runner用の設定
  - docker info 1>/dev/null 2>/dev/null || export DOCKER_HOST="tcp://localhost:2375"
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

dev-build:
  stage: build
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker build --cache-from "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" --build-arg NPM_TOKEN="$NPM_TOKEN" --build-arg COMMAND=build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - merge_requests
    - master
    - tags


merged-build:
  stage: build
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
    - docker build --cache-from "$CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" --build-arg NPM_TOKEN="$NPM_TOKEN" --build-arg COMMAND=build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master" && $CI_MERGE_REQUEST_ID'
      changes:
        - Dockerfile
        - app/*
        - scripts/*
        - .gitlab-ci.yml

master-pushed-build:
  stage: build
  script:
    - docker build --build-arg NPM_TOKEN="$NPM_TOKEN" --build-arg COMMAND=build -t "$CI_REGISTRY_IMAGE:nightly" .
    - docker push "$CI_REGISTRY_IMAGE:nightly" 
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
  
master-merged-build:
  stage: build
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
    - docker build --cache-from "$CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" --build-arg NPM_TOKEN="$NPM_TOKEN" --build-arg COMMAND=build -t "$CI_REGISTRY_IMAGE:nightly" .
    - docker push "$CI_REGISTRY_IMAGE:nightly"
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_MERGE_REQUEST_ID'

tag-build:
  stage: build
  script:
    # 最新のイメージ取得
    - docker pull "$CI_REGISTRY_IMAGE:nightly"
    - docker build --cache-from "$CI_REGISTRY_IMAGE:nightly" --build-arg NPM_TOKEN="$NPM_TOKEN" --build-arg COMMAND=build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - tags
